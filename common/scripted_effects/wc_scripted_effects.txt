set_cannot_marry_flag_effect = {
	if = {
		limit = { can_marry_trigger = no }
		log = "[This.GetBestName] can't marry"
	}
	add_trait = cannot_marry_trait
	if = {
		limit = {
			is_ruler = yes
			is_theocracy = no
			tier = BARON
		}
		set_government_type = theocracy_government
	}
}
remove_racial_traits_effect = {
	# Add new races always at the end
	# Humans
	if = { limit = { trait = creature_human 				} remove_trait = creature_human 				}

	if = { limit = { trait = creature_orc 					} remove_trait = creature_orc 				}
	if = { limit = { trait = creature_ogre 					} remove_trait = creature_ogre 				}
	if = { limit = { trait = creature_troll 				} remove_trait = creature_troll 				}
	if = { limit = { trait = creature_murloc 				} remove_trait = creature_murloc 				}
	if = { limit = { trait = creature_gnoll 				} remove_trait = creature_gnoll 				}
	if = { limit = { trait = creature_kobold 				} remove_trait = creature_kobold 				}
	if = { limit = { trait = creature_dwarf 				} remove_trait = creature_dwarf 				}
	if = { limit = { trait = creature_gnome 				} remove_trait = creature_gnome 				}

	# High elves
	if = { limit = { trait = creature_high_elf 				} remove_trait = creature_high_elf 			}
	if = { limit = { trait = creature_blood_elf 			} remove_trait = creature_blood_elf 			}

	if = { limit = { trait = creature_naga 					} remove_trait = creature_naga 				}

	# Red dragons
	if = { limit = { trait = creature_red_whelp 			} remove_trait = creature_red_whelp 			}
	if = { limit = { trait = creature_red_drake 			} remove_trait = creature_red_drake 			}
	if = { limit = { trait = creature_red_dragon 			} remove_trait = creature_red_dragon 			}
	if = { limit = { trait = creature_red_wyrm 				} remove_trait = creature_red_wyrm 			}

	# Blue dragons
	if = { limit = { trait = creature_blue_whelp 			} remove_trait = creature_blue_whelp 			}
	if = { limit = { trait = creature_blue_drake 			} remove_trait = creature_blue_drake 			}
	if = { limit = { trait = creature_blue_dragon 			} remove_trait = creature_blue_dragon 		}
	if = { limit = { trait = creature_blue_wyrm 			} remove_trait = creature_blue_wyrm 			}

	# Green dragons
	if = { limit = { trait = creature_green_whelp 			} remove_trait = creature_green_whelp 		}
	if = { limit = { trait = creature_green_drake 			} remove_trait = creature_green_drake 		}
	if = { limit = { trait = creature_green_dragon 			} remove_trait = creature_green_dragon 		}
	if = { limit = { trait = creature_green_wyrm 			} remove_trait = creature_green_wyrm 			}

	# Black dragons
	if = { limit = { trait = creature_black_whelp 			} remove_trait = creature_black_whelp 		}
	if = { limit = { trait = creature_black_drake 			} remove_trait = creature_black_drake 		}
	if = { limit = { trait = creature_black_dragon 			} remove_trait = creature_black_dragon 		}
	if = { limit = { trait = creature_black_wyrm 			} remove_trait = creature_black_wyrm 			}

	if = { limit = { trait = creature_goblin 				} remove_trait = creature_goblin 				}
	if = { limit = { trait = creature_pygmy 				} remove_trait = creature_pygmy 				}
	if = { limit = { trait = creature_hozen 				} remove_trait = creature_hozen 				}
	if = { limit = { trait = creature_draenei 				} remove_trait = creature_draenei 			}
	if = { limit = { trait = creature_arakkoa_corrupted 	} remove_trait = creature_arakkoa_corrupted 	}

	# Forms of undead
	if = { limit = { trait = creature_ghoul 				} remove_trait = creature_ghoul 				}
	if = { limit = { trait = creature_wraith 				} remove_trait = creature_wraith 				}
	if = { limit = { trait = creature_banshee 				} remove_trait = creature_banshee 			}
	if = { limit = { trait = creature_plague_eruptor 		} remove_trait = creature_plague_eruptor 		}
	if = { limit = { trait = creature_abomination 			} remove_trait = creature_abomination 		}
	if = { limit = { trait = creature_skeleton 				} remove_trait = creature_skeleton 			}
	if = { limit = { trait = creature_lich 					} remove_trait = creature_lich 				}

	# Demons
	if = { limit = { trait = creature_annihilan 			} remove_trait = creature_annihilan 			}
	if = { limit = { trait = creature_nathrezim				} remove_trait = creature_nathrezim			}
	if = { limit = { trait = creature_eredruin				} remove_trait = creature_eredruin			}
	if = { limit = { trait = creature_fel_orc				} remove_trait = creature_fel_orc				}
	if = { limit = { trait = creature_felblood_elf			} remove_trait = creature_felblood_elf		}
	if = { limit = { trait = creature_satyr					} remove_trait = creature_satyr				}
	if = { limit = { trait = creature_eredar				} remove_trait = creature_eredar				}
	if = { limit = { trait = creature_sayaadi				} remove_trait = creature_sayaadi				}
	if = { limit = { trait = creature_shivarra				} remove_trait = creature_shivarra			}
	if = { limit = { trait = creature_moarg					} remove_trait = creature_moarg				}
	if = { limit = { trait = creature_observer				} remove_trait = creature_observer			}
	if = { limit = { trait = creature_avatar_of_sargeras	} remove_trait = creature_avatar_of_sargeras	}

	# Elementals
	if = { limit = { trait = creature_air_elemental			} remove_trait = creature_air_elemental		}
	if = { limit = { trait = creature_earth_elemental		} remove_trait = creature_earth_elemental   	}
	if = { limit = { trait = creature_fire_elemental		} remove_trait = creature_fire_elemental		}
	if = { limit = { trait = creature_flamewaker			} remove_trait = creature_flamewaker			}
	if = { limit = { trait = creature_water_elemental		} remove_trait = creature_water_elemental   	}

	if = { limit = { trait = creature_iron_dwarf			} remove_trait = creature_iron_dwarf			}
	if = { limit = { trait = creature_vrykul				} remove_trait = creature_vrykul				}
	if = { limit = { trait = creature_tuskarr				} remove_trait = creature_tuskarr				}
	if = { limit = { trait = creature_magnataur				} remove_trait = creature_magnataur			}
	if = { limit = { trait = creature_furbolg				} remove_trait = creature_furbolg				}
	if = { limit = { trait = creature_gorloc				} remove_trait = creature_gorloc				}
	if = { limit = { trait = creature_watcher				} remove_trait = creature_watcher				}
	if = { limit = { trait = creature_wolvar				} remove_trait = creature_wolvar				}
	if = { limit = { trait = creature_taunka				} remove_trait = creature_taunka				}
	if = { limit = { trait = creature_kvaldir				} remove_trait = creature_kvaldir				}
	if = { limit = { trait = creature_nerubian				} remove_trait = creature_nerubian			}
	if = { limit = { trait = creature_harpy					} remove_trait = creature_harpy				}
	if = { limit = { trait = creature_mechagnome			} remove_trait = creature_mechagnome			}
	if = { limit = { trait = creature_earthen				} remove_trait = creature_earthen				}

	# Bronze dragons
	if = { limit = { trait = creature_bronze_whelp			} remove_trait = creature_bronze_whelp		}
	if = { limit = { trait = creature_bronze_drake			} remove_trait = creature_bronze_drake		}
	if = { limit = { trait = creature_bronze_dragon			} remove_trait = creature_bronze_dragon		}
	if = { limit = { trait = creature_bronze_wyrm			} remove_trait = creature_bronze_wyrm			}

	if = { limit = { trait = creature_ice_giant				} remove_trait = creature_ice_giant			}

	if = { limit = { trait = creature_nraqi					} remove_trait = creature_nraqi				}
	if = { limit = { trait = creature_cthraxxi				} remove_trait = creature_cthraxxi			}

	if = { limit = { trait = creature_night_elf				} remove_trait = creature_night_elf			}
	if = { limit = { trait = creature_tauren				} remove_trait = creature_tauren				}
	if = { limit = { trait = creature_centaur				} remove_trait = creature_centaur				}
	if = { limit = { trait = creature_quilboar				} remove_trait = creature_quilboar			}
	if = { limit = { trait = creature_tolvir				} remove_trait = creature_tolvir				}
	if = { limit = { trait = creature_qiraji				} remove_trait = creature_qiraji				}

	if = { limit = { trait = creature_dryad					} remove_trait = creature_dryad			}
	if = { limit = { trait = creature_frostnymph			} remove_trait = creature_frostnymph			}
	if = { limit = { trait = creature_highborne				} remove_trait = creature_highborne			}
	if = { limit = { trait = creature_vulpera				} remove_trait = creature_vulpera			}
	if = { limit = { trait = creature_sethrak				} remove_trait = creature_sethrak			}

	# Infinite dragons
	if = { limit = { trait = creature_infinite_whelp			} remove_trait = creature_infinite_whelp		}
	if = { limit = { trait = creature_infinite_drake			} remove_trait = creature_infinite_drake		}
	if = { limit = { trait = creature_infinite_dragon			} remove_trait = creature_infinite_dragon		}
	if = { limit = { trait = creature_infinitee_wyrm			} remove_trait = creature_infinite_wyrm			}

	# Race-related traits
	if = { limit = { trait = twoheaded 						} remove_trait = twoheaded					}
	if = { limit = { trait = tentacle_arm_mutation 			} remove_trait = tentacle_arm_mutation		}
	if = { limit = { trait = chela_hand_mutation 			} remove_trait = chela_hand_mutation			}
	if = { limit = { trait = chitinous_growths_mutation 	} remove_trait = chitinous_growths_mutation	}
	if = { limit = { trait = spikes_mutation 				} remove_trait = spikes_mutation				}
	if = { limit = { trait = scales_mutation 				} remove_trait = scales_mutation				}
	if = { limit = { trait = eyes_mutation 					} remove_trait = eyes_mutation				}
}
join_society_shadow_council_effect = {
	join_society = shadow_council
	if = {
		limit = {
			NOR = {
				true_religion = orcish_fel
				true_religion = burning_legion_religion
			}
		}
		if = {
			limit = {
				OR = {
					independent = yes
					liege = {
						NOR = {
							religion = orcish_fel
							religion = burning_legion_religion
						}
					}
				}
			}
			set_secret_religion = burning_legion_religion
		}
		if = {
			limit = {
				independent = no
				liege = { religion = orcish_fel }
			}
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
			religion = orcish_fel
		}
		if = {
			limit = {
				independent = no
				liege = { religion = burning_legion_religion }
			}
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
			religion = burning_legion_religion
		}
	}
}
join_society_cult_of_the_damned_effect = {
	join_society = cult_of_the_damned
	if = {
		limit = { NOT = { true_religion = death_god } }
		if = {
			limit = {
				OR = {
					independent = yes
					liege = { NOT = { religion = death_god } }
				}
			}
			set_secret_religion = death_god
		}
		if = {
			limit = {
				independent = no
				liege = { religion = death_god }
			}
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
			religion = death_god
		}
	}
}
join_society_twilights_hammer_cult_effect = {
	join_society = twilights_hammer_cult
	if = {
		limit = { NOT = { true_religion = old_gods_worship } }
		if = {
			limit = {
				OR = {
					independent = yes
					liege = { NOT = { religion = old_gods_worship } }
				}
			}
			set_secret_religion = old_gods_worship
		}
		if = {
			limit = {
				independent = no
				liege = { religion = old_gods_worship }
			}
			if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
			religion = old_gods_worship
		}
	}
}
tomb_generate_random_treasury_effect = {
	if = {
		limit = { has_province_flag = tomb_of_sargeras_flag }
		set_variable = { which = tomb_random_room value = 80010 }
	}
	if = {
		limit = { NOT = { has_province_flag = tomb_of_sargeras_flag } }
		random_list = {
			10 = { set_variable = { which = tomb_random_room value = 80000 } }
		}
	}
}
tomb_generate_random_room_effect = {
	random_list = {
		10 = {
			set_variable = { which = tomb_random_room value = 70 }
		}
		10 = {
			set_variable = { which = tomb_random_room value = 50 }
		}
		10 = {
			set_variable = { which = tomb_random_room value = 40 }
		}
		10 = {
			set_variable = { which = tomb_random_room value = 30 }
		}
		10 = {
			set_variable = { which = tomb_random_room value = 10 }
			modifier = { factor = 0 has_province_modifier = mysterious_cave }
		}
	}
}
chose_tomb_expedition_leader_effect = {
	if = {
		limit = {
			liege = { ai = no }
			ai = yes
			NOT = { has_character_flag = special_leader_of_expedition }
		}
		liege = { save_event_target_as = target_leader_of_expedition }
	}
	if = {
		limit = {
			OR = {
				liege = { ai = yes }
				ai = no
				has_character_flag = special_leader_of_expedition
			}
		}
		save_event_target_as = target_leader_of_expedition
	}
}
escape_from_tomb_effect = {
	remove_trait = travelling
	clr_character_flag = on_journey_to_tomb_flag

	if = {
		limit = {
			has_job_title = job_explorer
			has_job_action = action_survey
		}
		cancel_job_action = action_survey
	}
	clr_char_tomb_flags_and_modifiers_effect = yes
	clear_flags_with_prefix = WCTMB_
	event_target:target_tomb_location = { clr_prov_tomb_flags_and_modifiers_effect = yes }
	custom_tooltip = {
		text = escape_from_tomb_effect_tooltip
		hidden_tooltip = {
			character_event = { id = WCTMB.99900 }
		}
	}
}
clr_char_tomb_flags_and_modifiers_effect = {
	clear_flags_with_prefix = WCTMB_room_
}
clr_prov_tomb_flags_and_modifiers_effect = {
	hidden_effect = {
		clr_province_flag = expedition_is_in_tomb_flag
		set_variable = { which = tomb_expedition_location value = 0 }
		if = {
			limit = {
				OR = {
					event_target:target_explorer = { has_character_flag = got_to_treasure_flag }
					has_province_flag = tomb_of_sargeras_flag												# Tomb of Sargeras will be removed when you leave it
				}
			}
			if = {
				limit = { has_province_flag = tomb_of_sargeras_flag }
				clr_province_flag = tomb_of_sargeras_flag
			}
			if = {
				limit = { has_province_modifier = elven_tomb }
				remove_province_modifier = elven_tomb
			}
			if = {
				limit = { has_province_modifier = mysterious_cave }
				remove_province_modifier = mysterious_cave
			}
			if = {
				limit = { has_province_modifier = troll_ruins }
				remove_province_modifier = troll_ruins
			}
			if = {
				limit = { has_province_modifier = human_tomb }
				remove_province_modifier = human_tomb
			}
			if = {
				limit = { has_province_modifier = vrykul_barrow }
				remove_province_modifier = vrykul_barrow
			}
		}
	}
}
fire_next_tomb_event_effect = {
	custom_tooltip = {
		text = fire_next_tomb_event_effect_tooltip
		hidden_tooltip = {
			clr_char_tomb_flags_and_modifiers_effect = yes
			if = {
				limit = {
					OR = {
						event_target:target_leader_of_expedition = { ai = yes }
						event_target:target_tomb_location = { check_variable = { which = tomb_expedition_location value = 3 } }
					}
				}
				set_character_flag = got_to_treasure_flag
				if = {
					limit = { event_target:target_tomb_location = { has_province_flag = tomb_of_sargeras_flag } }
					narrative_event = { id = WCTMB.80010 }
				}
				# Random treasures
				random_list = {
					10 = { narrative_event = { id = WCTMB.80000 } }
				}
			}
			else = {
				event_target:target_tomb_location = { change_variable = { which = tomb_expedition_location value = 1 } }

				# Random rooms
				random_list = {
					10 = {
						set_character_flag = WCTMB_70_fired_flag
						narrative_event = { id = WCTMB.70 }
						modifier = {
							factor = 0
							has_character_flag = WCTMB_70_fired_flag
						}
					}
					10 = {
						set_character_flag = WCTMB_50_fired_flag
						narrative_event = { id = WCTMB.50 }
						modifier = {
							factor = 0
							has_character_flag = WCTMB_50_fired_flag
						}
					}
					10 = {
						set_character_flag = WCTMB_40_fired_flag
						narrative_event = { id = WCTMB.40 }
						modifier = {
							factor = 0
							has_character_flag = WCTMB_40_fired_flag
						}
					}
					10 = {
						set_character_flag = WCTMB_30_fired_flag
						narrative_event = { id = WCTMB.30 }
						modifier = {
							factor = 0
							has_character_flag = WCTMB_30_fired_flag
						}
					}
					10 = {
						set_character_flag = WCTMB_10_fired_flag
						narrative_event = { id = WCTMB.10 }
						modifier = {
							factor = 0
							has_character_flag = WCTMB_10_fired_flag
						}
					}
				}
			}
		}
	}
}
increase_colony = {
	if = {
		limit = { has_province_modifier = colony_3 }
		remove_province_modifier = colony_3
		county = { grant_title_no_opinion = ROOT }
	}
	else = {
		if = {
			limit = { has_province_modifier = colony_2 }
			remove_province_modifier = colony_2
			add_province_modifier = { name = colony_3 duration = -1 }
		}
		else = {
			if = {
				limit = { has_province_modifier = colony_1 }
				remove_province_modifier = colony_1
				add_province_modifier = { name = colony_2 duration = -1 }
			}
			else = {
				add_province_modifier = { name = colony_1 duration = -1 }
				holder_scope = { set_defacto_liege = ROOT }
			}
		}
	}
}
decrease_colony = {
	# if = {
		# limit = { has_province_modifier = colony_1 }
		# remove_province_modifier = colony_1
	# }
	if = {
		limit = { has_province_modifier = colony_2 }
		remove_province_modifier = colony_2
		add_province_modifier = { name = colony_1 duration = -1 }
	}
	if = {
		limit = { has_province_modifier = colony_3 }
		remove_province_modifier = colony_3
		add_province_modifier = { name = colony_2 duration = -1 }
	}
}
clr_all_society_recruitment_flags_effect = {
	clr_character_flag = being_recruited_by_cult_of_the_damned
	clr_character_flag = being_recruited_by_shadow_council
	clr_character_flag = being_recruited_by_twilights_hammer_cult
}

add_prev_useful_flesh = {
	if = {
		limit = { PREV = { is_large_humanoid_trigger = yes } }
		if = {
			limit = { PREV = { is_strong_trigger = yes } }
			change_variable = { which = useful_flesh value = 12 }
			PREV = { set_character_flag = brawny_corpse_flag }
		}
		else = {
			if = {
				limit = { PREV = { is_weak_trigger = yes } }
				change_variable = { which = useful_flesh value = 8 }
				PREV = { set_character_flag = brawny_corpse_flag }
			}
			else = {
				change_variable = { which = useful_flesh value = 10 }
				PREV = { set_character_flag = brawny_corpse_flag }
			}
		}
	}
	else = {
		if = {
			limit = { PREV = { is_small_humanoid_trigger = yes } }
			if = {
				limit = { PREV = { is_strong_trigger = yes } }
				change_variable = { which = useful_flesh value = 4 }
				PREV = { set_character_flag = frail_corpse_flag }
			}
			else = {
				if = {
					limit = { PREV = { is_weak_trigger = yes } }
					change_variable = { which = useful_flesh value = 2 }
					PREV = { set_character_flag = frail_corpse_flag }
				}
				else = {
					change_variable = { which = useful_flesh value = 3 }
					PREV = { set_character_flag = frail_corpse_flag }
				}
			}
		}
		else = {
			if = {
				limit = { PREV = { is_strong_trigger = yes } }
				change_variable = { which = useful_flesh value = 8 }
				PREV = { set_character_flag = brawny_corpse_flag }
			}
			else = {
				if = {
					limit = { PREV = { is_weak_trigger = yes } }
					change_variable = { which = useful_flesh value = 4 }
					PREV = { set_character_flag = frail_corpse_flag }
				}
				else = {
					change_variable = { which = useful_flesh value = 6 }
					PREV = { set_character_flag = normal_corpse_flag }
				}
			}
		}
	}
}

show_close_people_what_this_become_effect = {
	if = {
		limit = {
			OR = {
				is_married = yes
				num_of_friends = 1
				num_of_lovers = 1
				has_children = yes
				father = { always = yes }
				mother = { always = yes }
				is_ruler = yes
				has_job_title = yes
				has_minor_title = yes
			}
			OR = {
				NOT = { has_character_flag = show_what_become_cooldown_flag }
				had_character_flag = { flag = show_what_become_cooldown_flag days = 30 }
			}
		}
		set_character_flag = show_what_become_cooldown_flag
		any_spouse = {
			limit = {
				NOT = { character = event_target:target_necromancer }	# This character turned THIS, so it already know
			}
			character_event = { id = WCDAC.150 days = 5 }
		}
		any_friend = {
			limit = {
				NOT = { character = event_target:target_necromancer }	# This character turned THIS, so it already know
				NOT = { is_married = PREV }
			}
			character_event = { id = WCDAC.150 days = 5 }
		}
		any_lover = {
			limit = {
				NOT = { character = event_target:target_necromancer }	# This character turned THIS, so it already know
				NOT = { is_married = PREV }
				NOT = { is_friend = PREV }
			}
			character_event = { id = WCDAC.150 days = 5 }
		}
		any_close_relative = {
			limit = {
				NOT = { character = event_target:target_necromancer }	# This character turned THIS, so it already know
				NOT = { is_married = PREV }
				NOT = { is_friend = PREV }
				NOT = { is_lover = PREV }
			}
			character_event = { id = WCDAC.150 days = 5 }
		}
		if = {		# ...liege is almost your family
			limit = {
				independent = no
				OR = {
					is_ruler = yes
					has_job_title = yes
					has_minor_title = yes
				}

				liege = {
					NOT = { character = event_target:target_necromancer }	# This character turned THIS, so it already know
					NOT = { is_married = PREV }
					NOT = { is_friend = PREV }
					NOT = { is_lover = PREV }
					NOT = { is_close_relative = PREV }
				}
			}
			liege = { character_event = { id = WCDAC.150 days = 5 } }
		}
	}
}

increase_vampiric_hunger_effect = {
	if = {
		limit = { has_character_modifier = moderate_blood_thirst }
		remove_character_modifier = moderate_blood_thirst
		add_character_modifier = { name = severe_blood_thirst duration = -1 }
	}
	else = {
		if = {
			limit = { has_character_modifier = minor_blood_thirst }
			remove_character_modifier = minor_blood_thirst
			add_character_modifier = { name = moderate_blood_thirst duration = -1 }
		}
		else = {
			if = {
				limit = {
					NOR = {
						has_character_modifier = severe_blood_thirst
						has_character_modifier = moderate_blood_thirst
						has_character_modifier = minor_blood_thirst
					}
				}
				add_character_modifier = { name = minor_blood_thirst duration = -1 }
			}
		}
	}
}
decrease_vampiric_hunger_effect = {
	if = {
		limit = { has_character_modifier = severe_blood_thirst }
		remove_character_modifier = severe_blood_thirst
		add_character_modifier = { name = moderate_blood_thirst duration = -1 }
	}
	else = {
		if = {
			limit = { has_character_modifier = moderate_blood_thirst }
			remove_character_modifier = moderate_blood_thirst
			add_character_modifier = { name = minor_blood_thirst duration = -1 }
		}
		else = {
			if = {
				limit = { has_character_modifier = minor_blood_thirst }
				remove_character_modifier = minor_blood_thirst
			}
		}
	}
}
become_intelligent_worget_effect = {
	add_trait = worgen
	hidden_effect = {
		# Notifies your family/spouse/friends/lovers
		show_close_people_what_this_become_effect = yes
	}
}
become_mindless_worgen_effect = {
	add_trait = worgen
	add_trait = mindless_worgen
	hidden_effect = {
		character_event = { id = WCDRU.1000 days = 60 }			# Mindless worgen events

		# Notifies your family/spouse/friends/lovers
		show_close_people_what_this_become_effect = yes
	}
}
return_to_twisting_nether_effect = {
	add_trait = in_twisting_nether
	hidden_effect = { character_event = { id = WCFEL.900 days = 1095 random = 730 } }
}
lose_corporeal_body_effect = {
	add_trait = lost_corporeal_body
	hidden_effect = { character_event = { id = WCUND.900 days = 182 random = 182 } }
}
suggest_fel_source_effect = {
	if = {
		limit = { is_ruler = yes }
		hidden_effect = {
			any_courtier_or_vassal = {
				limit = {
					OR = {
						ai = no
						NOT = { has_character_flag = ai_refused_dark_magic_flag }
					}

					is_susceptible_to_fel_corruption_trigger = yes
					is_high_elf_trigger = yes
					NOR = {
						true_religion_group = fel_group
						has_character_flag = consuming_fel_magic_flag
					}
				}
				letter_event = { id = WCTHW.1065 }
			}
		}
	}
}
suggest_void_source_effect = {
	if = {
		limit = { is_ruler = yes }
		hidden_effect = {
			any_courtier_or_vassal = {
				limit = {
					OR = {
						ai = no
						NOT = { has_character_flag = ai_refused_dark_magic_flag }
					}

					is_susceptible_to_void_corruption_trigger = yes
					is_high_elf_trigger = yes
					NOR = {
						true_religion_group = void_group
						has_character_flag = consuming_void_magic_flag
					}
				}
				letter_event = { id = WCTHW.1065 }
			}
		}
	}
}
prev_sacrifice_this_effect = {
	# Head of Religion
	if = {
		limit = { controls_religion = yes }
		PREV = {
			religion_authority = { modifier = sacrificed_head_good years = 20 }

			prestige = 250
			piety = 500
		}
		religion_authority = { modifier = sacrificed_head_bad years = 20 }
	}
	# Ruler
	else_if = {
		limit = { is_ruler = yes }
		PREV = {
			prestige = 75
			piety = 100
		}
	}
	# Holy Man
	else_if = {
		limit = {
			OR = {
				is_priest = yes
				is_ascetic_trigger = yes
			}
		}
		PREV = {
			prestige = 50
			piety = 75
		}
	}
	# Child
	else_if = {
		limit = { is_adult = no }
		PREV = {
			prestige = 25
			piety = 50
		}
	}
	# Regular
	else = {
		PREV = {
			piety = 25
		}
	}
	death = { death_reason = death_sacrificed killer = PREV }
}
add_xalatath_effect = {
	if = {
		limit = { has_dlc = "Mystics" }
		add_artifact = xalatath
		new_artifact = {
			set_creation_date = 1.1.1
		}
		hidden_effect = { character_event = { id = WCVOD.2030 days = 730 } }
	}
}
destroy_xalatath_effect = {
	if = {
		limit = { has_dlc = "Mystics" }
		unsafe_destroy_artifact = xalatath
		hidden_effect = { 73 = { province_event = { id = WCVOD.2000 days = 30 } } }
	}
}
prev_burn_evil_being_this_effect = {
	custom_tooltip = {
		text = burn_evil_being_effect_tooltip
		hidden_tooltip = {
			random_list = {
				80 = {
					death = { death_reason = death_execution_burning killer = PREV }
					modifier = {
						factor = 0.8
						intrigue = 30
					}
					modifier = {
						factor = 0.8
						intrigue = 25
					}
					modifier = {
						factor = 0.8
						intrigue = 20
					}
					modifier = {
						factor = 0.8
						intrigue = 15
					}
					modifier = {
						factor = 0.8
						intrigue = 10
					}
					modifier = {
						factor = 0.8
						intrigue = 5
					}
					modifier = {
						factor = 0.8
						combat_rating = 80
					}
					modifier = {
						factor = 0.8
						combat_rating = 70
					}
					modifier = {
						factor = 0.8
						combat_rating = 60
					}
					modifier = {
						factor = 0.8
						combat_rating = 50
					}
					modifier = {
						factor = 0.8
						combat_rating = 40
					}
					modifier = {
						factor = 0.8
						combat_rating = 30
					}
					modifier = {
						factor = 0.8
						combat_rating = 20
					}
					modifier = {
						factor = 0.8
						combat_rating = 10
					}
				}
				20 = {
					banish = yes
					modifier = {
						factor = 0
						PREV = { ai = yes }		# AI always kill
					}
				}
			}
		}
	}
}
drink_demon_blood_effect = {
	if = {
		limit = {
			NOT = { trait = being_demon }
			is_susceptible_to_fel_corruption_trigger = yes
		}
		add_character_modifier = { name = drank_demon_blood duration = 7300 }
		if = {
			limit = { NOT = { true_religion_group = fel_group } }
			if = {
				limit = {
					is_ruler = yes
					independent = yes
				}
				if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
				religion = burning_legion_religion
			}
			else = {
				if = {
					limit = {
						OR = {
							is_ruler = no
							independent = no
						}
						liege = { OR = { religion = orcish_fel religion = burning_legion_religion } }
					}
					if = { limit = { has_secret_religion = yes } clear_secret_religion = yes }
					liege = { ROOT = { religion = PREV } }
				}
				else = { set_secret_religion = burning_legion_religion }
			}
		}
		if = {
			limit = { is_ruler = yes }
			custom_tooltip = {
				text = EVTOPTB_WCFEL_9960_tooltip
				hidden_effect = {
					any_courtier_or_vassal = {
						limit = {
							prisoner = no

							NOT = { has_character_modifier = drank_demon_blood }

							NOT = { trait = being_demon }
							is_susceptible_to_fel_corruption_trigger = yes
						}
						character_event = { id = WCFEL.9961 days = 2 }
					}
				}
			}
		}

		add_35_fel_corruption_effect = yes
	}
}
change_evil_laws_effect = {
	if = {
		limit = {
			# is_law_allowed = succ_evil_elective
			is_law_potential = succ_evil_elective
			NOT = { has_law = succ_evil_elective }
		}
		add_law = { law = succ_evil_elective cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = crown_authority_4
			is_law_potential = crown_authority_4
			NOT = { has_law = crown_authority_4 }
		}
		add_law = { law = crown_authority_4 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = vice_royalty_0
			is_law_potential = vice_royalty_0
			NOT = { has_law = vice_royalty_0 }
		}
		add_law = { law = vice_royalty_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = law_voting_power_0
			is_law_potential = law_voting_power_0
			NOT = { has_law = law_voting_power_0 }
		}
		add_law = { law = law_voting_power_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = war_voting_power_0
			is_law_potential = war_voting_power_0
			NOT = { has_law = war_voting_power_0 }
		}
		add_law = { law = war_voting_power_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = revoke_title_voting_power_0
			is_law_potential = revoke_title_voting_power_0
			NOT = { has_law = revoke_title_voting_power_0 }
		}
		add_law = { law = revoke_title_voting_power_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = imprison_voting_power_0
			is_law_potential = imprison_voting_power_0
			NOT = { has_law = imprison_voting_power_0 }
		}
		add_law = { law = imprison_voting_power_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = grant_title_voting_power_0
			is_law_potential = grant_title_voting_power_0
			NOT = { has_law = grant_title_voting_power_0 }
		}
		add_law = { law = grant_title_voting_power_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = banish_voting_power_0
			is_law_potential = banish_voting_power_0
			NOT = { has_law = banish_voting_power_0 }
		}
		add_law = { law = banish_voting_power_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = execution_voting_power_0
			is_law_potential = execution_voting_power_0
			NOT = { has_law = execution_voting_power_0 }
		}
		add_law = { law = execution_voting_power_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = succession_voting_power_0
			is_law_potential = succession_voting_power_0
			NOT = { has_law = succession_voting_power_0 }
		}
		add_law = { law = succession_voting_power_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = out_of_realm_inheritance_law_1
			is_law_potential = out_of_realm_inheritance_law_1
			NOT = { has_law = out_of_realm_inheritance_law_1 }
		}
		add_law = { law = out_of_realm_inheritance_law_1 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = vassal_wars_law_0
			is_law_potential = vassal_wars_law_0
			NOT = { has_law = vassal_wars_law_0 }
		}
		add_law = { law = vassal_wars_law_0 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = revoke_title_law_2
			is_law_potential = revoke_title_law_2
			NOT = { has_law = revoke_title_law_2 }
		}
		add_law = { law = revoke_title_law_2 cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = ze_administration_laws_1
			is_law_potential = ze_administration_laws_1
			NOT = { has_law = ze_administration_laws_1 }
		}
		add_law = { law = ze_administration_laws_1 cooldown = no opinion_effect = no }
	}
}
convert_to_target_undead_province_effect = {
	add_province_modifier = { name = undead_province duration = -1 }
	culture = event_target:target_province_holder
	religion = event_target:target_province_holder
}
make_uncolonized_ruler_effect = {
	add_trait = uncolonized_trait
	set_government_type = uncolonized_government
}
spawn_horde_troops_effect = {
	spawn_small_horde_troops_effect = yes
	if = {
		limit = {
			has_game_rule = {
				name = invaders_strength
				value = default
			}
		}
		spawn_small_horde_troops_effect = yes
	}
	if = {
		limit = {
			has_game_rule = {
				name = invaders_strength
				value = x1_5
			}
		}
		spawn_small_horde_troops_effect = yes
		spawn_small_horde_troops_effect = yes
	}
	if = {
		limit = {
			has_game_rule = {
				name = invaders_strength
				value = x2
			}
		}
		spawn_small_horde_troops_effect = yes
		spawn_small_horde_troops_effect = yes
		spawn_small_horde_troops_effect = yes
	}
}
# DON'T USE it outside of spawn_horde_troops_effect
spawn_small_horde_troops_effect = {
	spawn_unit = {
		owner = ROOT
		province = 73
		home = 73
		troops = {
			archers = { 1000 1000 }
			light_infantry = { 1500 1500 }
			heavy_infantry = { 2000 2000 }
			light_cavalry = { 375 375 }
			knights = { 125 125 }
		}
		attrition = 0
		maintenance = no
		earmark = horde_forces
	}
	spawn_fleet = {
		province = closest
		owner = ROOT
		earmark = horde_forces
		troops = {
			galleys = { 75 75 }
		}
	}
}
spawn_legion_troops_effect = {
	spawn_small_legion_troops_effect = yes
	if = {
		limit = {
			has_game_rule = {
				name = invaders_strength
				value = default
			}
		}
		spawn_small_legion_troops_effect = yes
	}
	if = {
		limit = {
			has_game_rule = {
				name = invaders_strength
				value = x1_5
			}
		}
		spawn_small_legion_troops_effect = yes
		spawn_small_legion_troops_effect = yes
	}
	if = {
		limit = {
			has_game_rule = {
				name = invaders_strength
				value = x2
			}
		}
		spawn_small_legion_troops_effect = yes
		spawn_small_legion_troops_effect = yes
		spawn_small_legion_troops_effect = yes
	}
}
spawn_small_legion_troops_effect = {
	spawn_unit = {
		owner = THIS
		province = event_target:target_summoning_location
		home = event_target:target_summoning_location
		troops = {
			light_infantry = { 2000 2000 }
			demonicshock = { 2250 2250 }
		}
		attrition = 0
		maintenance = no
		earmark = legion_forces
	}
	spawn_unit = {
		owner = THIS
		province = event_target:target_summoning_location
		home = event_target:target_summoning_location
		troops = {
			golems = { 250 250 }
		}
		attrition = 0
		maintenance = no
		earmark = legion_forces
	}
	spawn_unit = {
		owner = THIS
		province = event_target:target_summoning_location
		home = event_target:target_summoning_location
		troops = {
			artillery = { 500 500 }
		}
		attrition = 0
		maintenance = no
		earmark = legion_forces
	}
	spawn_fleet = {
		province = closest
		owner = THIS
		earmark = legion_forces
		troops = {
			galleys = { 75 75 }
		}
	}
}
spawn_scourge_troops_effect = {
	spawn_small_scourge_troops_effect = yes
	if = {
		limit = {
			has_game_rule = {
				name = invaders_strength
				value = default
			}
		}
		spawn_small_scourge_troops_effect = yes
	}
	if = {
		limit = {
			has_game_rule = {
				name = invaders_strength
				value = x1_5
			}
		}
		spawn_small_scourge_troops_effect = yes
		spawn_small_scourge_troops_effect = yes
	}
	if = {
		limit = {
			has_game_rule = {
				name = invaders_strength
				value = x2
			}
		}
		spawn_small_scourge_troops_effect = yes
		spawn_small_scourge_troops_effect = yes
		spawn_small_scourge_troops_effect = yes
	}
}
spawn_small_scourge_troops_effect = {
	spawn_unit = {
		province = 695
		home = 695
		owner = THIS
		troops = {
			archers = { 1875 1875 }
			light_infantry = { 2625 2625 }
			golems = { 500 500 }
		}
		attrition = 0
		reinforces = yes
		maintenance = no
	}
	spawn_fleet = {
		province = closest
		owner = THIS
		troops = {
			galleys = { 75 75 }
		}
	}
}

set_scourge_government_effect = {
	set_government_type = scourge_government
	any_demesne_title = {
		limit = { prevs_title_can_has_laws_trigger = yes }
		change_evil_laws_effect = yes
	}
	recalc_succession = yes
}
set_legion_government_effect = {
	set_government_type = legion_government
	any_demesne_title = {
		limit = { prevs_title_can_has_laws_trigger = yes }
		change_evil_laws_effect = yes
	}
	recalc_succession = yes
}
set_black_pact_government_effect = {
	set_government_type = black_pact_government
	any_demesne_title = {
		limit = { prevs_title_can_has_laws_trigger = yes }
		change_evil_laws_effect = yes
	}
	recalc_succession = yes
}
clear_evil_laws_effect = {
	if = {
		limit = {
			# is_law_allowed = succ_gavelkind
			is_law_potential = succ_gavelkind
			has_law = succ_evil_elective
		}
		add_law = { law = succ_gavelkind cooldown = no opinion_effect = no }
	}
	if = {
		limit = {
			# is_law_allowed = status_of_magic_1
			is_law_potential = status_of_magic_1
			has_law = status_of_magic_3
		}
		add_law = { law = status_of_magic_1 cooldown = no opinion_effect = no }
	}
}

add_5_mind_control_power_effect = {
	change_variable = { which = mind_control_power value = 5 }
	if = {
		limit = { check_variable = { which = mind_control_power value = 101 } }
		set_variable = { which = mind_control_power value = 100 }
	}
	character_event = { id = WCUND.1106 days = 1 }		# Increases power of mind control
}
remove_5_mind_control_power_effect = {
	change_variable = { which = mind_control_power value = -5 }
	if = {
		limit = { NOT = { check_variable = { which = mind_control_power value = 0 } } }
		set_variable = { which = mind_control_power value = 0 }
	}
	character_event = { id = WCUND.1107 days = 1 }		# Decreases power of mind control
}
remove_3_mind_control_power_effect = {
	change_variable = { which = mind_control_power value = -3 }
	if = {
		limit = { NOT = { check_variable = { which = mind_control_power value = 0 } } }
		set_variable = { which = mind_control_power value = 0 }
	}
	character_event = { id = WCUND.1107 days = 1 }		# Decreases power of mind control
}

set_undead_gfx_effect = {
	if = {
		limit = { has_undead_gfx_trigger = no }	# If you add new undead gfx, don't forget to add your gfx in this trigger
		if = {
			limit = { has_human_gfx_trigger = yes }
			set_graphical_culture = human_undead
		}
		else_if = {
			limit = {
				OR = {
					graphical_culture = murlocgfx
					graphical_culture = murlocundeadgfx
				}
			}
			set_graphical_culture = murloc_undead
		}
		else_if = {
			limit = {
				OR = {
					graphical_culture = quilboargfx
					graphical_culture = quilboarundeadgfx
				}
			}
			set_graphical_culture = quilboar_undead
		}
		else_if = {
			limit = { graphical_culture = vrykulgfx }
			set_graphical_culture = vrykul_undead
		}
		else_if = {
			limit = {
				OR = {
					graphical_culture = gnollgfx
					graphical_culture = gnollundeadgfx
				}
			}
			set_graphical_culture = gnoll_undead
		}
		else = {
			set_graphical_culture = ghoul
		}
	}
}
add_trait_undead_effect = {
	# Undead children shall not pass
	if = {
		limit = { is_adult = no }
		death = { death_reason = death_poor_health }
	}
	else = {
		if = {
			limit = { NOT = { trait = being_undead } }
			add_trait = being_undead
		}
		# If you has secret religion, you reveal yourself
		if = {
			limit = { has_secret_religion = yes }
			convert_to_secret_religion = yes
		}

		# Removes drunkard, diseases, negative genetic and weight
		clean_dark_beings_effect = yes

		set_undead_gfx_effect = yes

		hidden_effect = {
			if = {
				limit = { has_character_flag = being_raised_flag }
				clr_character_flag = being_raised_flag
			}

			# Pregnant shall not pass
			cancel_pregnancy_effect = yes

			# Notifies your family/spouse/friends/lovers
			show_close_people_what_this_become_effect = yes
		}
	}
}

free_from_lich_king_effect = {
	if = {
		limit = {
			trait = being_undead
			NOT = { trait = champion_of_the_lich_king }
			NOT = { has_landed_title = e_scourge }
			e_scourge = {
				has_holder = yes
				holder_scope = {
					religion = PREVPREV
				}
			}
		}
		custom_tooltip = {
			text = free_from_lich_king_effect_tooltip
			character_event = { id = WCUND.1109 }
		}
	}
}
become_blood_elf_effect = {
	if = {
		limit = { trait = creature_high_elf }
		remove_trait = creature_high_elf
		add_trait = creature_blood_elf
		if = {
			limit = { NOT = { culture = blood_elf } }
			culture = blood_elf
		}
	}
	hidden_effect = {
		if = {
			limit = { is_ruler = yes }
			any_demesne_province = {
				limit = { culture = high_elf }
				culture = blood_elf
			}
			any_courtier_or_vassal = {
				limit = {
					trait = creature_high_elf
					OR = {
						is_ruler = no
						tier = BARON
					}
				}
				become_blood_elf_effect = yes
			}
		}
	}
}
remove_sunwells_effect = {
	b_sunwell = {
		remove_building = tp_sunwell
		remove_building = tp_sunwell_light
		remove_building = tp_sunwellcorrupted
		remove_building = tp_felwell
		remove_building = tp_voidwell
	}
}
add_sunwell_effect = {
	clr_global_flag = sunwell_is_being_restored_flag
	remove_sunwells_effect = yes
	b_sunwell = { add_building = tp_sunwell }
}
add_lightwell_effect = {
	clr_global_flag = sunwell_is_being_restored_flag
	clr_global_flag = sunwell_naaru_spark_flag
	remove_sunwells_effect = yes
	b_sunwell = { add_building = tp_sunwell_light }
}
add_deathwell_effect = {
	clr_global_flag = sunwell_is_being_restored_flag
	remove_sunwells_effect = yes
	b_sunwell = { add_building = tp_sunwellcorrupted }
}
add_felwell_effect = {
	clr_global_flag = felwell_restoring_flag
	clr_global_flag = sunwell_is_being_restored_flag
	remove_sunwells_effect = yes
	b_sunwell = { add_building = tp_felwell }
}
add_voidwell_effect = {
	clr_global_flag = voidwell_restoring_flag
	clr_global_flag = sunwell_is_being_restored_flag
	remove_sunwells_effect = yes
	b_sunwell = { add_building = tp_voidwell }
}

add_max_depopulation_effect = {
	if = {
		limit = {
			has_dlc = "Reapers"

			NOT = { has_province_modifier = depopulated_3 }
			any_province_holding = {
				OR = {
					holding_type = city
					holding_type = temple
					holding_type = castle
					holding_type = tribal
				}
			}
		}
		hidden_effect = { set_variable = { which = prosperity_value value = 0 } }
		if = { limit = { has_province_modifier = prosperity_modifier_1 } remove_province_modifier = prosperity_modifier_1 }
		if = { limit = { has_province_modifier = prosperity_modifier_2 } remove_province_modifier = prosperity_modifier_2 }
		if = { limit = { has_province_modifier = prosperity_modifier_3 } remove_province_modifier = prosperity_modifier_3 }
		if = { limit = { has_province_modifier = depopulated_1 } remove_province_modifier = depopulated_1 }
		if = { limit = { has_province_modifier = depopulated_2 } remove_province_modifier = depopulated_2 }
		add_province_modifier = { name = depopulated_3 duration = -1 }
		hidden_effect = {
			clr_province_flag = recent_depopulation_1
			clr_province_flag = recent_depopulation_2
			set_province_flag = recent_depopulation_3
		}
	}
}

cancel_pregnancy_effect = {
	if = {
		limit = {
			is_pregnant = yes
		}
		if = { limit = { trait = hard_pregnancy } remove_trait = hard_pregnancy }
		if = { limit = { trait = pregnant } remove_trait = pregnant }
		cancel_pregnancy = yes
	}
}

remove_has_magical_withdrawal_trait_effect = {
	if = {
		limit = { trait = has_magical_withdrawal }
		remove_trait = has_magical_withdrawal
	}
}

find_right_spouse_effect = {
	if = {
		limit = {
			ai = yes
			can_marry = yes
			can_marry_trigger = yes
			NOT = {
				any_dynasty_member = {
					ai = no
				}
			}
		}
		character_event = { id = WCCLN.130 }		# Finds right spouse
	}
}

# Adds default traits when new character spawns
add_default_traits = {
	# ambitious races and beings
	if = {
		limit = { is_ambitious_being_trigger = yes }
		random = {
			chance = 10
			
			remove_trait_silently_content_effect = yes
			add_trait_silently_ambitious_effect = yes
		}
	}
	
	# arbitrary races and beings
	if = {
		limit = { is_arbitrary_being_trigger = yes }
		random = {
			chance = 35
			
			additive_modifier = {
				value = 50
				evil_public_religion_trigger = yes
			}
			
			remove_trait_silently_just_effect = yes
			add_trait_silently_arbitrary_effect = yes
		}
	}
	
	# brave races and beings
	
	# charitable races and beings
	
	# chaste races and beings
	
	# craven races and beings
	
	# cruel races and beings
	if = {
		limit = { is_cruel_being_trigger = yes }
		random = {
			chance = 15
			
			additive_modifier = {
				value = 50
				evil_public_religion_trigger = yes
			}
			
			remove_trait_silently_kind_effect = yes
			add_trait_silently_cruel_effect = yes
		}
	}
	
	# cynical races and beings
	if = {
		limit = { is_cynical_being_trigger = yes }
		random = {
			chance = 35
			
			additive_modifier = {
				value = 50
				evil_public_religion_trigger = yes
			}
			
			remove_trait_silently_zealous_effect = yes
			add_trait_silently_cynical_effect = yes
		}
	}
	
	# content races and beings
	
	# deceitful races and beings
	if = {
		limit = { is_deceitful_being_trigger = yes }
		random = {
			chance = 25
			
			additive_modifier = {
				value = 50
				evil_public_religion_trigger = yes
			}
			
			remove_trait_silently_honest_effect = yes
			add_trait_silently_deceitful_effect = yes
		}
	}
	
	# diligent races and beings
	
	# envious races and beings
	
	# gluttonous races and beings
	if = {
		limit = { is_gluttonous_being_trigger = yes }
		random = {
			chance = 35
			
			additive_modifier = {
				value = 50
				evil_public_religion_trigger = yes
			}
			additive_modifier = {
				value = 50
				religion = cult_of_wealth
			}
			
			remove_trait_silently_temperate_effect = yes
			add_trait_silently_gluttonous_effect = yes
		}
	}
	
	# greedy races and beings
	if = {
		limit = { is_greedy_being_trigger = yes }
		random = {
			chance = 35
			
			additive_modifier = {
				value = 50
				evil_public_religion_trigger = yes
			}
			additive_modifier = {
				value = 50
				religion = cult_of_wealth
			}
			
			remove_trait_silently_charitable_effect = yes
			add_trait_silently_greedy_effect = yes
		}
	}
	
	# gregarious races and beings
	
	# honest races and beings
	if = {
		limit = { is_honest_being_trigger = yes }
		random = {
			chance = 40
			
			if = { limit = { trait = deceitful } remove_trait = deceitful }
			add_trait_silently_honest_effect = yes
		}
	}
	
	# humble races and beings
	
	# kind races and beings
	
	# lustful races and beings
	if = {
		limit = { is_lustful_being_trigger = yes }
		random = {
			chance = 80
			
			remove_trait_silently_chaste_effect = yes
			add_trait_silently_lustful_effect = yes
		}
	}
	
	# patient races and beings
	
	# proud races and beings
	if = {
		limit = { is_proud_being_trigger = yes }
		random = {
			chance = 35
			
			additive_modifier = {
				value = 50
				evil_public_religion_trigger = yes
			}
			
			remove_trait_silently_humble_effect = yes
			add_trait_silently_proud_effect = yes
		}
	}
	
	# shy races and beings
	
	# slothful races and beings
	
	# temperate races and beings
	
	# wroth races and beings
	if = {
		limit = { is_wroth_being_trigger = yes }
		random = {
			chance = 25
			
			additive_modifier = {
				value = 50
				evil_public_religion_trigger = yes
			}
			
			remove_trait_silently_patient_effect = yes
			add_trait_silently_wroth_effect = yes
		}
	}
}

set_prev_gfx_effect = {
	PREV = {
		if = {
			limit = { placeholder_gfx_trigger = no }										# These graphical cultures can't get race trait, so...
			gfx_culture_scope = { save_event_target_as = target_gfx_culture }
		}
		else = { culture_scope = { save_event_target_as = target_gfx_culture } }		# ...only PREV's actual culture can be used
	}
	set_graphical_culture = event_target:target_gfx_culture
	# Stops from spawning of two-headed ogres
	if = {
		limit = { graphical_culture = twoheadedogregfx }
		set_graphical_culture = ogre
	}
	clear_event_target = target_gfx_culture
}

create_religious_head_effect = {
	custom_tooltip = {
		text = create_religious_head_effect_tooltip
		create_character = {
			dynasty = none
			culture = ROOT religion = ROOT
			attributes = {
				martial=5 diplomacy=5 stewardship=5 intrigue=5 learning=5
			}
			trait=mastermind_theologian
			trait=diligent trait=zealous trait=ambitious trait=humble
			age = 60
		}
		new_character = {
			save_event_target_as = target_religious_head
			
			character_event = { id = WCRAC.10 }		# Adds race traits
			add_class_religion_trait_effect = yes
			activate_title = { title = PREV status = yes }
			grant_title_no_opinion = PREV
			set_defacto_liege = ROOT
			
			narrative_event = { id = WCREL.10 }
		}
	}
}